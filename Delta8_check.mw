# Maple code for checking Combinatorial Nullstellensatz proofs of
# https://arxiv.org/abs/1904.12060

# Compute coefficient of a monomial in a multivariate polynomial
# NB: Variable I is written as II to avoid problems with root of X^2+1

cof :=
proc(f, m)
local v;
    if m = 1 then return f;
    else
        v := indets(m, name);
        return cof(coeff(f, v[1], degree(m,v[1])), subs(v[1] = 1, m));
    fi;
end proc;


#####################
###### Checker ######
#####################


# For each configuration, we give the polynomial Pol, the monomial m
# given in the proof, and a monomial mtot defined as the products of
# X^{|\hat{x}|-1}.

# Three conditions have to be checked:
# - deg(Pol) = deg(m)
# - m divides mtot
# - the coefficient of m in Pol is non-zero

# For each configuration, the three tests should answer "true".
# Warning: some of the polynomials are quite big, hence computations
# may take time

#####################
# Configuration C_3 #
#####################
## Lemma 21
Pol := (A-B)*(A-C)*(A-U)*(A-V)*(B-C)*(B-V)*(B-W)*(C-U)*(C-W)*(U-V)*(U-W)*(V-W):
m := A^2*B^3*C^2*V^2*W^3:
mtot := A^2*B^3*C^2*U*V^3*W^3:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 1);



#####################
# Configuration C_4 #
#####################
## Lemma 22
Pol := (A-B)*(A-U)*(A-V)*(B-V)*(B-W)*(U-V)*(V-W):
m := A^2*B^2*V^2*W:
mtot := A^2*B^2*U*V^3*W:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -1);



#####################
# Configuration C_5 #
#####################
## Lemma 23
# w_1w_2 is not an edge
Pol := (A-B)*(A-D)*(A-E)*(A-V_1)*(A-W_1)*(B-C)*(B-E)*(B-F)*(B-V_1)*(B-V_2)*(C-F)*(C-G)*(C-V_2)*(C-W_2)*(D-E)*(D-F)*(D-G)*(D-U)*(D-W_1)*(E-F)*(E-G)*(E-U)*(E-V_1)*(F-G)*(F-U)*(F-V_2)*(G-U)*(G-W_2)*(U-V_1)*(U-V_2)*(U-W_2)*(U-W_1)*(V_1-V_2)*(V_1-W_1)*(V_2-W_2):
m := A^2*B^5*C^3*D^2*E^4*F^4*G^2*U^3*V_1^4*V_2^5*W_2:
mtot := A^3*B^5*C^3*D^2*E^4*F^4*G^2*U^3*V_1^5*V_2^5*W_1*W_2:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 1);

# w_1w_2 is an edge
Pol := Pol*(W_1-W_2):
m := m*W_2:
mtot := mtot*W_1*W_2:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -1);


## Lemma 24
Pol := (A-B)*(A-D)*(A-E)*(A-V_1)*(A-V_2)*(B-C)*(B-E)*(B-F)*(B-V_2)*(B-V_3)*(C-F)*(C-G)*(C-V_3)*(C-V_4)*(D-E)*(D-F)*(D-G)*(D-U)*(D-V_1)*(E-F)*(E-G)*(E-U)*(E-V_2)*(F-G)*(F-U)*(F-V_3)*(G-U)*(G-V_4)*(U-V_1)*(U-V_2)*(U-V_3)*(U-V_4)*(V_1-V_2)*(V_2-V_3)*(V_3-V_4):
m := A^4*B^4*C^3*D^2*E^4*F^3*G^3*U*V_2^5*V_3^3*V_4^3:
mtot := A^4*B^4*C^3*D^3*E^4*F^3*G^3*U^3*V_1^3*V_2^5*V_3^3*V_4^3:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 1);


## Lemma 25
Pol := (A-B)*(A-F)*(A-G)*(A-V_1)*(A-V_2)*(B-C)*(B-G)*(B-H)*(B-V_2)*(C-D)*(C-H)*(C-II)*(D-E)*(D-II)*(D-J)*(D-V_5)*(E-J)*(E-K)*(E-V_5)*(E-V_6)*(F-G)*(F-H)*(F-II)*(F-J)*(F-K)*(F-U)*(F-V_1)*(G-H)*(G-II)*(G-J)*(G-K)*(G-U)*(G-V_2)*(H-II)*(H-J)*(H-K)*(H-U)*(II-J)*(II-K)*(II-U)*(J-K)*(J-U)*(J-V_5)*(K-U)*(K-V_6)*(U-V_1)*(U-V_2)*(U-V_5)*(U-V_6)*(V_1-V_2)*(V_5-V_6):
mtot := A^4*B^3*C*D^3*E^4*F^5*G^6*H^4*II^4*J^6*K^5*U^5*V_1^3*V_2^5*V_5^5*V_6^3:



#####################
# Configuration C_6 #
#####################
## Lemma 26
# v_1v_3 is not an edge
Pol := (A-B)*(A-C)*(A-D)*(A-U)*(A-V_1)*(B-C)*(B-D)*(B-E)*(B-U)*(B-V_2)*(C-E)*(C-U)*(C-V_3)*(D-E)*(D-V_1)*(D-V_2)*(E-V_2)*(E-V_3)*(U-V_1)*(U-V_2)*(U-V_3)*(V_1-V_2)*(V_2-V_3):
m := A^2*B^4*C^3*D^2*E^2*U^5*V_1*V_2^3*V_3:
mtot := V_1*V_3*D^2*E^2*V_2^3*A^3*C^3*B^4*U^5:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 1);

# v_1v_3 is an edge
Pol:= Pol*(V_1-V_3):
m := m*V_3:
mtot := mtot*V_1*V_3:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -2);


## Lemma 27
# no more edges
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-F)*(A-J)*(A-U)*(A-V_3)*(B-C)*(B-D)*(B-E)*(B-F)*(B-G)*(B-U)*(B-V_4)*(C-D)*(C-E)*(C-G)*(C-H)*(C-U)*(C-V_5)*(D-E)*(D-H)*(D-II)*(D-U)*(D-V_1)*(E-II)*(E-J)*(E-U)*(E-V_2)*(F-G)*(F-J)*(F-V_3)*(F-V_4)*(G-H)*(G-V_4)*(G-V_5)*(H-II)*(H-V_1)*(H-V_5)*(II-J)*(II-V_1)*(II-V_2)*(J-V_2)*(J-V_3)*(U-V_1)*(U-V_2)*(U-V_3)*(U-V_4)*(U-V_5)*(V_1-V_2)*(V_1-V_5)*(V_2-V_3)*(V_3-V_4)*(V_4-V_5):
m := A^6*B^4*C^6*D^3*E^5*F^2*G^2*H^3*II^2*J^2*U^9*V_1^3*V_2*V_3^3*V_4*V_5^3:
mtot := A^6*B^5*C^6*D^6*E^5*F^2*G^2*H^3*II^2*J^2*U^9*V_1^3*V_2*V_3^3*V_4*V_5^3:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -1);

# only v_2v_4 is an edge
Q := Pol*(V_2-V_4):
n := V_2*m:
ntot := V_2*V_4*mtot:

evalb(degree(Q) = degree(n));
divide(ntot, n);
evalb(cof(Q, n) = -2);

# only v_1v_3 is an edge
Q := Pol*(V_1-V_3):
n := V_1*m:
ntot := V_1*V_3*mtot:

evalb(degree(Q) = degree(n));
divide(ntot, n);
evalb(cof(Q, n) = 1);

# only v_2v_5 is an edge
Q := Pol*(V_2-V_5):
n := V_2*m:
ntot := V_2*V_5*mtot:

evalb(degree(Q) = degree(n));
divide(ntot, n);
evalb(cof(Q, n) = -1);

# only v_2v_4 and v_2v_5 are edges
Q := Pol*(V_2-V_4)*(V_2-V_5):
n := V_2^2*m:
ntot := V_2^2*V_4*V_5*mtot:

evalb(degree(Q) = degree(n));
divide(ntot, n);
evalb(cof(Q, n) = -2);

# only v_1v_3 and v_3v_5 are edges
Q := Pol*(V_1-V_3)*(V_3-V_5):
n := V_3^2*m:
ntot := V_1*V_3^2*V_5*mtot:

evalb(degree(Q) = degree(n));
divide(ntot, n);
evalb(cof(Q, n) = 1);

# only v_1v_3 and v_1v_4 are edges
Q := Pol*(V_1-V_3)*(V_1-V_4):
n := V_3*V_4*m:
ntot := V_1^2*V_3*V_4*mtot:

evalb(degree(Q) = degree(n));
divide(ntot, n);
evalb(cof(Q, n) = 1);



#####################
# Configuration C_7 #
#####################
## Lemma 28
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-U)*(A-V_1)*(B-C)*(B-D)*(B-E)*(B-F)*(B-U)*(B-V_2)*(C-D)*(C-F)*(C-U)*(C-V_3)*(D-U)*(E-F)*(E-V_1)*(E-V_2)*(F-V_2)*(F-V_3)*(U-V_1)*(U-V_2)*(U-V_3)*(V_1-V_2)*(V_2-V_3):
m := A^3*B^4*C^2*D^3*E^4*F^3*V_1^2*V_2^5*V_3:
mtot := A^3*B^4*C^2*D^3*E^4*F^3*U^3*V_1^3*V_2^5*V_3:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -1);


#####################
# Configuration C_8 #
#####################
## Lemma 29

Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-F)*(A-U)*(A-V_4)*(B-C)*(B-D)*(B-E)*(B-F)*(B-G)*(B-U)*(C-D)*(C-E)*(C-F)*(C-G)*(C-H)*(C-U)*(D-E)*(D-F)*(D-H)*(D-II)*(D-U)*(D-V_2)*(E-F)*(E-II)*(E-J)*(E-U)*(E-V_1)*(F-J)*(F-U)*(F-W)*(G-H)*(H-II)*(H-V_2)*(II-J)*(II-V_1)*(II-V_2)*(J-V_1)*(J-W)*(U-V_1)*(U-V_2)*(U-V_4)*(U-W)*(V_1-V_2)*(V_1-W):
m := A^4*B*C^6*D^4*E^6*F^4*G*H^4*II^3*J^3*V_1^5*V_4*W:
mtot := A^4*B*C^7*D^4*E^6*F^4*G*H^4*II^3*J^3*U^6*V_1^5*V_2*V_4*W:

# no more edges
n := m*C*U^2*V_2:
evalb(degree(Pol) = degree(n));
divide(mtot, n);
evalb(cof(Pol, n) = 3);

# v_2v_4 is the only additional edge
Q := Pol*(V_2-V_4):
n := m*C*U*V_2^2*V_4:
ntot := mtot*V_2*V_4:

evalb(degree(Q) = degree(n));
divide(ntot, n);
evalb(cof(Q, n) = 2);

# v_4w is the only additional edge
Q := Pol*(V_4-W):
n := m*C*U*V_2*V_4*W:
ntot := mtot*V_4*W:

evalb(degree(Q) = degree(n));
divide(ntot, n);
evalb(cof(Q, n) = -1);

# v_2w is the only additional edge
Q := Pol*(V_2-W):
n := m*C*U*V_2^2*W:
ntot := mtot*V_2*W:

evalb(degree(Q) = degree(n));
divide(ntot, n);
evalb(cof(Q, n) = 1);

# v_1v_4 is the only additional edge
Q := Pol*(V_1-V_4):
n := m*C*U^3*V_4:
ntot := mtot*V_1*V_4:

evalb(degree(Q) = degree(n));
divide(ntot, n);
evalb(cof(Q, n) = -2);

# v_2v_4 and v_4w are the only additional edges
Q := Pol*(V_2-V_4)*(V_4-W):
n := m*C*V_2^2*V_4^2*W:
ntot := mtot*V_2*V_4^2*W:

evalb(degree(Q) = degree(n));
divide(ntot, n);
evalb(cof(Q, n) = 3);

# v_1v_4 and v_2v_4 are the only additional edges
Q := Pol*(V_1-V_4)*(V_2-V_4):
n := m*C*V_1*V_2^2*V_4^2:
ntot := mtot*V_1*V_2*V_4^2:

evalb(degree(Q) = degree(n));
divide(ntot, n);
evalb(cof(Q, n) = 3);

# v_1v_4 and v_4w are the only additional edges
Q := Pol*(V_1-V_4)*(V_4-W):
n := m*C*V_1*V_2*V_4^2*W:
ntot := mtot*V_1*V_4^2*W:

evalb(degree(Q) = degree(n));
divide(ntot, n);
evalb(cof(Q, n) = -3);

# v_2v_4 and v_2w are the only additional edges
Q := Pol*(V_2-V_4)*(V_2-W):
n := m*C*V_2^3*V_4*W:
ntot := mtot*V_2^2*V_4*W:

evalb(degree(Q) = degree(n));
divide(ntot, n);
evalb(cof(Q, n) = -3);

# v_2w and v_4w are the only additional edges
Q := Pol*(V_2-W)*(V_4-W):
n := m*U*V_2^2*V_4*W^2:
ntot := mtot*V_2*V_4*W^2:

evalb(degree(Q) = degree(n));
divide(ntot, n);
evalb(cof(Q, n) = -1);

# v_1v_4, v_2v_4 and v_4w are the only additional edges
Q := Pol*(V_1-V_4)*(V_2-V_4)*(V_4-W):
n := m*C*V_1*V_2*V_4^3*W:
ntot := mtot*V_1*V_2*V_4^3*W:

evalb(degree(Q) = degree(n));
divide(ntot, n);
evalb(cof(Q, n) = 3);

# v_2v_4, v_2w and v_4w are the only additional edges
Q := Pol*(V_2-V_4)*(V_2-W)*(V_4-W):
n := m*C*V_2^2*V_4^2*W^2:
ntot := mtot*V_2^2*V_4^2*W^2:

evalb(degree(Q) = degree(n));
divide(ntot, n);
evalb(cof(Q, n) = -1);


## Lemma 31
# w=v_4 and v_2w is not an edge
Pol := (A-B)*(A-D)*(A-C)*(A-G)*(A-U)*(A-W)*(B-C)*(B-D)*(B-E)*(B-U)*(C-D)*(C-E)*(C-F)*(C-U)*(C-V_2)*(D-F)*(D-G)*(D-U)*(D-V_1)*(E-F)*(E-V_2)*(F-G)*(F-V_1)*(F-V_2)*(G-V_1)*(G-W)*(U-V_1)*(U-V_2)*(U-W)*(V_1-V_2)*(V_1-W):
m := A^3*B^4*C^2*D^4*E^3*F^3*G^4*V_1^4*V_2*W^3:
mtot := A^3*B^4*C^2*D^4*E^3*F^3*G^4*U^3*V_1^5*V_2*W^3:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -1);

# w=v_4 and v_2w is an edge
Pol := Pol*(V_2-W):
m := m*V_1:
mtot := mtot*V_2*W:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 2);

# w != v_4 and no more edge
Pol := (A-B)*(A-C)*(A-D)*(A-U)*(A-V_4)*(B-C)*(B-D)*(B-E)*(B-U)*(C-D)*(C-E)*(C-F)*(C-U)*(C-V_2)*(D-F)*(D-G)*(D-U)*(D-V_1)*(E-F)*(E-V_2)*(F-G)*(F-V_1)*(F-V_2)*(G-V_1)*(G-W)*(U-V_1)*(U-V_2)*(U-V_4)*(V_1-V_2)*(V_1-W):
m := A^2*B^4*C^2*D^4*E^3*F^3*G^3*U*V_1^4*V_2*V_4:
mtot := A^2*B^4*C^2*D^4*E^3*F^3*G^3*U^3*V_1^5*V_2*V_4*W:

n := m*U*V_1:
evalb(degree(Pol) = degree(n));
divide(mtot, n);
evalb(cof(Pol, n) = -2);

# w != v_4 and only v_2w is an edge
Q := Pol*(V_2-W):
n := m*V_2*W^2:
ntot := mtot*V_2*W:

evalb(degree(Q) = degree(n));
divide(ntot, n);
evalb(cof(Q, n) = -1);

# w != v_4 and only v_2v_4 is an edge
Q := Pol*(V_2-V_4):
n := m*V_2*V_4*W:
ntot := mtot*V_2*V_4:

evalb(degree(Q) = degree(n));
divide(ntot, n);
evalb(cof(Q, n) = -2);

# w != v_4 and only v_2v_4 and v_2w are edges
Q := Pol*(V_2-V_4)*(V_2-W):
n := m*U*V_2*W^2:
ntot := mtot*V_2^2*V_4*W:

evalb(degree(Q) = degree(n));
divide(ntot, n);
evalb(cof(Q, n) = -5);



#####################
# Configuration C_9 #
#####################
## Lemma 32
Pol := (A-C)*(A-D)*(A-E)*(A-F)*(A-G)*(A-U)*(C-D)*(C-E)*(C-F)*(C-G)*(C-U)*(D-E)*(D-F)*(D-G)*(D-K)*(D-U)*(D-V_1)*(E-F)*(E-G)*(E-K)*(E-L)*(E-U)*(E-W_1)*(F-G)*(F-L)*(F-U)*(F-V_3)*(G-U)*(K-L)*(K-V_1)*(K-W_1)*(L-V_3)*(L-W_1)*(U-V_1)*(U-V_3)*(U-W_1)*(V_1-W_1)*(V_3-W_1):
m := A^2*C^3*D^6*E^3*F^6*G*K^2*L^2*U^6*V_1^3*V_3^3*W_1:
mtot := A^2*C^3*D^6*E^5*F^6*G*K^2*L^2*U^6*V_1^3*V_3^3*W_1:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -2);


## Lemma 33
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-F)*(A-G)*(A-H)*(A-U)*(B-C)*(B-D)*(B-E)*(B-F)*(B-G)*(B-H)*(B-II)*(B-U)*(C-D)*(C-E)*(C-F)*(C-G)*(C-II)*(C-J)*(C-U)*(D-E)*(D-F)*(D-G)*(D-J)*(D-K)*(D-U)*(D-V_1)*(E-F)*(E-G)*(E-K)*(E-L)*(E-U)*(E-W)*(F-G)*(F-L)*(F-U)*(F-V_3)*(G-U)*(H-II)*(II-J)*(J-K)*(J-V_1)*(K-L)*(K-V_1)*(K-W)*(L-W)*(L-V_3)*(U-V_1)*(U-V_3)*(U-W)*(V_1-W)*(V_3-W):
m := A^3*B^8*C^3*D^7*E^6*F^6*G*H^2*II^2*J*K^4*L^3*V_1^3*V_3^3*W^3:
mtot := A^3*B^8*C^3*D^7*E^6*F^6*G*H^2*II^2*J*K^4*L^3*U^6*V_1^4*V_3^3*W^3:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -3);


## Lemma 35
# w = v_3
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-F)*(A-G)*(A-H)*(A-U)*(B-C)*(B-D)*(B-E)*(B-F)*(B-G)*(B-H)*(B-II)*(B-U)*(C-D)*(C-E)*(C-F)*(C-G)*(C-II)*(C-J)*(C-U)*(D-E)*(D-F)*(D-G)*(D-J)*(D-K)*(D-L)*(D-U)*(D-V_1)*(E-F)*(E-G)*(E-K)*(E-U)*(F-G)*(F-L)*(F-U)*(F-V_3)*(G-U)*(H-II)*(II-J)*(J-K)*(J-L)*(J-V_1)*(K-L)*(K-V_1)*(L-V_1)*(L-V_3)*(U-V_1)*(U-V_3)*(V_1-V_3):
m := A*B^8*C^3*D^8*E^2*F^6*G*H^2*II^2*J^2*K*L^5*U^4*V_1^4*V_3^3:
mtot := A^3*B^8*C^3*D^8*E^2*F^6*G*H^2*II^2*J^2*K*L^5*U^6*V_1^5*V_3^3:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 1);

# m = ww_1
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-F)*(A-G)*(A-H)*(A-U)*(B-C)*(B-D)*(B-E)*(B-F)*(B-G)*(B-H)*(B-II)*(B-U)*(C-D)*(C-E)*(C-F)*(C-G)*(C-II)*(C-J)*(C-U)*(D-E)*(D-F)*(D-G)*(D-J)*(D-K)*(D-L)*(D-U)*(D-V_1)*(E-F)*(E-G)*(E-K)*(E-M)*(E-N)*(E-U)*(E-W_1)*(F-G)*(F-N)*(F-U)*(F-V_3)*(G-U)*(H-II)*(II-J)*(J-K)*(J-L)*(J-V_1)*(K-L)*(K-M)*(K-N)*(K-V_1)*(K-W_1)*(L-M)*(L-V_1)*(L-W)*(M-N)*(M-W)*(M-W_1)*(N-V_3)*(N-W_1)*(U-V_1)*(U-V_3)*(U-W_1)*(V_1-W)*(V_1-W_1)*(V_3-W_1)*(W-W_1):
m := A*B^8*C^3*D^7*E^5*F^6*G*H^2*II^2*J^2*K^4*L^4*M^2*N^2*U^6*V_1^6*V_3^3*W^3*W_1:
mtot := A^3*B^8*C^3*D^8*E^5*F^6*G*H^2*II^2*J^2*K^4*L^5*M^2*N^2*U^6*V_1^6*V_3^3*W^3*W_1:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -1);

# m = ww_2 and v_3w_2 is not an edge
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-F)*(A-G)*(A-H)*(A-U)*(B-C)*(B-D)*(B-E)*(B-F)*(B-G)*(B-H)*(B-II)*(B-U)*(C-D)*(C-E)*(C-F)*(C-G)*(C-II)*(C-J)*(C-M)*(C-U)*(C-W_2)*(D-E)*(D-F)*(D-G)*(D-J)*(D-K)*(D-L)*(D-U)*(D-V_1)*(E-F)*(E-G)*(E-K)*(E-U)*(F-G)*(F-U)*(F-V_3)*(G-U)*(H-II)*(II-J)*(II-M)*(II-W_2)*(J-K)*(J-L)*(J-M)*(J-V_1)*(J-W_2)*(K-L)*(K-V_1)*(L-M)*(L-V_1)*(L-W)*(M-W)*(M-W_2)*(U-V_1)*(U-V_3)*(U-W_2)*(V_1-W)*(V_1-W_2)*(W-W_2):
m := A*B^8*C^4*D^8*E^2*F^5*G*H^2*II^4*J^4*K*L^5*M^2*U^6*V_1^5*V_3*W^3*W_2:
mtot := A^3*B^8*C^4*D^8*E^2*F^5*G*H^2*II^4*J^4*K*L^5*M^2*U^6*V_1^6*V_3*W^3*W_2:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 1);

# m = ww_2 and v_3w_2 is an edge
Pol := Pol*(V_3-W_2):
m := m*A^2*V_3*W_2/(C*U^2):
mtot := mtot*V_3*W_2:


evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 1);



######################
# Configuration C_10 #
######################
## Lemma 36
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-F)*(A-G)*(A-H)*(A-U)*(B-C)*(B-D)*(B-E)*(B-F)*(B-G)*(B-H)*(B-II)*(B-U)*(C-D)*(C-E)*(C-F)*(C-G)*(C-II)*(C-J)*(C-U)*(D-E)*(D-F)*(D-G)*(D-J)*(D-K)*(D-U)*(E-F)*(E-G)*(E-K)*(E-L)*(E-U)*(F-G)*(F-L)*(F-M)*(F-U)*(G-M)*(G-U)*(H-II)*(II-J)*(J-K)*(K-L)*(L-M):
m := B^6*C^2*D^8*E^3*F^8*G^3*H*II^2*J^2*K^2*L^2*M^2*U^4:
mtot := A^2*B^8*C^3*D^8*E^3*F^8*G^3*H*II^2*J^2*K^2*L^2*M^2*U^5:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -2);



######################
# Configuration C_11 #
######################
## Lemma 37
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-F)*(A-G)*(A-H)*(A-L)*(A-U)*(A-W)*(B-C)*(B-D)*(B-E)*(B-F)*(B-G)*(B-H)*(B-II)*(B-U)*(C-D)*(C-E)*(C-F)*(C-G)*(C-II)*(C-J)*(C-U)*(D-E)*(D-F)*(D-G)*(D-J)*(D-K)*(D-U)*(E-F)*(E-G)*(E-K)*(E-U)*(F-G)*(F-U)*(G-L)*(G-U)*(G-V_3)*(H-II)*(H-L)*(H-W)*(II-J)*(J-K)*(L-V_3)*(L-W)*(U-V_3)*(U-W)*(V_3-W):
m := A^5*B^7*C^2*D^8*E^2*F*G^6*H^4*II^2*J^2*K*L^2*U^4*V_3^3*W:
mtot := A^5*B^8*C^3*D^8*E^2*F*G^6*H^4*II^2*J^2*K*L^2*U^6*V_3^3*W:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -1);


## Lemma 38
# v_3w_2 is not an edge
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-F)*(A-G)*(A-H)*(A-N)*(A-U)*(A-W_2)*(B-C)*(B-D)*(B-E)*(B-F)*(B-G)*(B-H)*(B-II)*(B-U)*(C-D)*(C-E)*(C-F)*(C-G)*(C-II)*(C-J)*(C-U)*(D-E)*(D-F)*(D-G)*(D-J)*(D-K)*(D-U)*(E-F)*(E-G)*(E-K)*(E-L)*(E-U)*(F-G)*(F-L)*(F-M)*(F-U)*(F-V_3)*(G-M)*(G-N)*(G-U)*(G-W_1)*(H-II)*(H-N)*(H-W_2)*(II-J)*(J-K)*(K-L)*(L-M)*(L-V_3)*(M-N)*(M-V_3)*(M-W_1)*(N-W_1)*(N-W_2)*(U-V_3)*(U-W_1)*(U-W_2)*(V_3-W_1)*(W_1-W_2):
m := B^4*C^3*D^8*E^3*F^7*G^6*H^4*II^2*J^2*K^2*L*M^4*N^2*U^7*V_3^4*W_1^3*W_2:
mtot := A^5*B^8*C^3*D^8*E^3*F^7*G^6*H^4*II^2*J^2*K^2*L*M^4*N^2*U^7*V_3^4*W_1^3*W_2:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 3);

# v_3w_2 is an edge
Pol := Pol*(V_3-W_2):
m := m*V_3*W_2/B:
mtot := mtot*V_3*W_2:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -2);


## Lemma 40
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-F)*(A-G)*(A-H)*(A-U)*(B-C)*(B-D)*(B-E)*(B-F)*(B-G)*(B-H)*(B-II)*(B-U)*(C-D)*(C-E)*(C-F)*(C-G)*(C-II)*(C-J)*(C-U)*(D-E)*(D-F)*(D-G)*(D-J)*(D-K)*(D-U)*(E-F)*(E-G)*(E-K)*(E-L)*(E-U)*(F-G)*(F-L)*(F-M)*(F-N)*(F-U)*(F-V_3)*(G-M)*(G-U)*(H-II)*(II-J)*(J-K)*(K-L)*(L-M)*(L-N)*(L-V_3)*(M-N)*(M-V_3)*(N-V_3)*(N-W)*(U-V_3)*(V_3-W):
m := B^7*C^3*D^8*E^3*F^8*G^2*H^2*II^2*J*K^2*L^2*M*N^3*U^5*V_3^5*W:
mtot := A^3*B^8*C^3*D^8*E^3*F^8*G^2*H^2*II^2*J^2*K^2*L^2*M*N^4*U^5*V_3^5*W:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -3);



######################
# Configuration C_12 #
######################
## Lemma 41
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-F)*(A-G)*(A-H)*(A-U)*(B-C)*(B-D)*(B-E)*(B-F)*(B-G)*(B-H)*(B-II)*(B-U)*(C-D)*(C-E)*(C-F)*(C-G)*(C-II)*(C-J)*(C-U)*(C-W)*(D-E)*(D-F)*(D-G)*(D-J)*(D-K)*(D-U)*(D-V_3)*(E-F)*(E-G)*(E-K)*(E-L)*(E-U)*(F-G)*(F-L)*(F-M)*(F-U)*(G-M)*(G-U)*(H-II)*(II-J)*(II-W)*(J-K)*(J-V_3)*(J-W)*(K-L)*(K-V_3)*(L-M)*(U-V_3)*(U-W)*(V_3-W):
m := A^3*B^7*C^5*D^7*E^3*F^8*G^2*H^2*II^4*J^3*K*L^2*M*U*V_3^4*W:
mtot := A^3*B^8*C^5*D^7*E^3*F^8*G^2*H^2*II^4*J^3*K*L^2*M*U^6*V_3^4*W:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 3);


## Lemma 42
# w_1w_2 is not an edge
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-F)*(A-G)*(A-H)*(A-U)*(B-C)*(B-D)*(B-E)*(B-F)*(B-G)*(B-H)*(B-II)*(B-U)*(C-D)*(C-E)*(C-F)*(C-G)*(C-II)*(C-J)*(C-U)*(C-W_2)*(D-E)*(D-F)*(D-G)*(D-J)*(D-K)*(D-U)*(D-V_3)*(E-F)*(E-G)*(E-K)*(E-L)*(E-U)*(E-W_1)*(F-G)*(F-L)*(F-M)*(F-U)*(G-M)*(G-U)*(H-II)*(II-J)*(II-W_2)*(J-K)*(J-V_3)*(J-W_2)*(K-L)*(K-V_3)*(K-W_1)*(L-M)*(L-W_1)*(U-V_3)*(U-W_1)*(U-W_2)*(V_3-W_1)*(V_3-W_2):
m := B^3*C^4*D^7*E^5*F^8*G^2*H*II^4*J^3*K^3*L^4*M*U^7*V_3^5*W_1*W_2:
mtot := A^2*B^8*C^5*D^7*E^5*F^8*G^2*H*II^4*J^3*K^3*L^4*M*U^7*V_3^5*W_1*W_2:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 3); # takes some time
# since A does not appear in m, it is faster to compute:
evalb(cof(subs(A = 0, Pol), m) = 3);

# w_1w_2 is an edge
Pol := Pol*(W_1-W_2):
m := m*W_1*W_2/B:
mtot := mtot*W_1*W_2:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 1); # takes some time
# since A does not appear in m, it is faster to compute:
evalb(cof(subs(A = 0, Pol), m) = 1);


## Lemma 44
# d(w_2)=8 and d(w_3)=7
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-F)*(A-G)*(A-H)*(A-U)*(B-C)*(B-D)*(B-E)*(B-F)*(B-G)*(B-H)*(B-II)*(B-U)*(C-D)*(C-E)*(C-F)*(C-G)*(C-II)*(C-J)*(C-U)*(D-E)*(D-F)*(D-G)*(D-J)*(D-K)*(D-N)*(D-U)*(D-V_3)*(E-F)*(E-G)*(E-K)*(E-L)*(E-U)*(F-G)*(F-L)*(F-M)*(F-U)*(G-M)*(G-U)*(H-II)*(II-J)*(J-K)*(J-N)*(J-V_3)*(K-L)*(K-N)*(K-V_3)*(L-M)*(N-V_3)*(N-W_1)*(U-V_3)*(V_3-W_1):
m := B^7*C^2*D^8*E^3*F^8*G^2*H*II^2*J^2*K^2*L^2*M*N^3*V_3^4*W_1 * (H*U^5*V_3):
mtot := A^3*B^8*C^3*D^8*E^3*F^8*G^2*H^2*II^2*J^2*K^2*L^2*M*N^4*U^5*V_3^5*W_1:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -1);

# d(w_2)=7 and d(w_3)=8

m := B^7*C^2*D^8*E^3*F^8*G^2*H*II^2*J^2*K^2*L^2*M*N^3*V_3^4*W_1 * (A*B*C^2*II*J*N):
mtot := A^2*B^8*C^4*D^8*E^3*F^8*G^2*H*II^3*J^3*K^2*L^2*M*N^4*U^5*V_3^5*W_1:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 1);



######################
# Configuration C_14 #
######################
## Lemma 48
Pol := (A-B)*(A-H)*(A-II)*(A-J)*(B-C)*(B-J)*(C-D)*(D-E)*(D-II)*(D-J)*(E-F)*(E-II)*(E-J)*(F-G)*(G-H)*(H-II)*(II-J):
m := A^2*B^2*C*D^2*E^2*F*G*H^2*II*J^3:
mtot := A^2*B^2*C*D^2*E^2*F*G*H^2*II*J^3:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -1);


## Lemma 49
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-F)*(A-G)*(A-H)*(A-II)*(A-P)*(A-U)*(B-C)*(B-D)*(B-E)*(B-F)*(B-G)*(B-H)*(B-II)*(B-J)*(B-U)*(C-D)*(C-E)*(C-F)*(C-G)*(C-H)*(C-J)*(C-K)*(C-U)*(D-E)*(D-F)*(D-G)*(D-H)*(D-K)*(D-L)*(D-U)*(E-F)*(E-G)*(E-H)*(E-L)*(E-M)*(E-U)*(F-G)*(F-H)*(F-M)*(F-N)*(F-U)*(G-H)*(G-N)*(G-O)*(G-U)*(H-O)*(H-P)*(H-U)*(II-J)*(II-P)*(J-K)*(K-L)*(L-M)*(M-N)*(N-O)*(O-P):
m := A^5*B^4*C^8*D^3*E^8*F^3*G^8*H^3*II^3*J^3*K^2*L^2*M^2*N^2*O^2*P^2:
mtot := A^8*B^4*C^8*D^3*E^8*F^3*G^8*H^3*II^3*J^3*K^2*L^2*M^2*N^2*O^2*P^2*U^5:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 16);
# For some reason, cof may overflow in the line above, but it works if
# we extract the coefficient by hand:
evalb(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(Pol, P^2), O^2), N^2), M^2), L^2), K^2), J^3), II^3), H^3), F^3), D^3), B^4), A^5), G^8), E^8), C^8) = 16);
# We can even obtain a result faster since U does not appear in m:
evalb(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(subs(U = 0, Pol), P^2), O^2), N^2), M^2), L^2), K^2), J^3), II^3), H^3), F^3), D^3), B^4), A^5), G^8), E^8), C^8) = 16);


## Lemma 51
# w_1w_2 is not an edge
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-F)*(A-G)*(A-H)*(A-U)*(A-V_4)*(B-C)*(B-D)*(B-E)*(B-F)*(B-G)*(B-H)*(B-II)*(B-U)*(B-W_1)*(C-D)*(C-E)*(C-F)*(C-G)*(C-II)*(C-J)*(C-U)*(D-E)*(D-F)*(D-G)*(D-J)*(D-K)*(D-U)*(D-W_2)*(E-F)*(E-G)*(E-K)*(E-L)*(E-U)*(F-G)*(F-L)*(F-U)*(G-U)*(H-II)*(H-V_4)*(H-W_1)*(II-J)*(II-W_1)*(J-K)*(J-W_2)*(K-L)*(K-W_2)*(U-V_4)*(U-W_1)*(U-W_2)*(V_4-W_1):
m := A^5*B^4*C^7*D^4*E^7*F*G^3*H^2*II^4*J^4*K^4*U^5*V_4^3*W_2:
mtot := A^5*B^4*C^7*D^4*E^7*F*G^3*H^2*II^4*J^4*K^4*L*U^5*V_4^3*W_1*W_2:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 1);

# w_1w_2 is an edge
Pol := Pol*(W_1-W_2):
m := m*W_2*L/B:
mtot := mtot*W_1*W_2:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -1);

######################
# Configuration C_16 #
######################
## Lemma 55
# Case 1, no edge v2v4
Pol := (A-C)*(A-D)*(A-E)*(A-F)*(A-G)*(A-H)*(A-II)*(A-P)*(A-U)*(C-D)*(C-E)*(C-F)*(C-G)*(C-H)*(C-U)*(C-V_2)*(D-E)*(D-F)*(D-G)*(D-H)*(D-L)*(D-U)*(E-F)*(E-G)*(E-H)*(E-L)*(E-M)*(E-Q)*(E-U)*(F-G)*(F-H)*(F-M)*(F-N)*(F-U)*(G-H)*(G-N)*(G-O)*(G-U)*(G-V_4)*(H-O)*(H-P)*(H-U)*(II-P)*(L-M)*(L-Q)*(M-N)*(M-Q)*(N-O)*(N-V_4)*(O-P)*(O-V_4)*(U-V_2)*(U-V_4):
m := A^6*C^5*D^2*E^7*F^3*G^6*H^2*II*L^2*M^4*N^2*O*P^3*Q*U^4*V_2*V_4^3:
mtot := A^8*C^5*D^2*E^8*F^3*G^6*H^2*II*L^2*M^4*N^2*O*P^3*Q*U^4*V_2*V_4^3:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 1);

# Case 1, with edge v2v4
Pol := (V_2-V_4)*Pol:
m := m*V_2:
mtot := V_2*V_4*mtot:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 1);

# Case 2, no edge v2v4
Pol := (A-B)*(A-C)*(A-E)*(A-F)*(A-G)*(A-H)*(A-II)*(A-P)*(A-U)*(B-C)*(B-E)*(B-F)*(B-G)*(B-H)*(B-II)*(B-U)*(C-E)*(C-F)*(C-G)*(C-H)*(C-U)*(C-V_2)*(E-F)*(E-G)*(E-H)*(E-M)*(E-U)*(F-G)*(F-H)*(F-M)*(F-N)*(F-U)*(G-H)*(G-N)*(G-O)*(G-U)*(G-V_4)*(H-O)*(H-P)*(H-U)*(II-P)*(M-N)*(N-O)*(N-V_4)*(O-P)*(O-V_4)*(U-V_2)*(U-V_4):
m := A^7*B^2*C^5*E^6*F^3*G^6*H^2*II^2*M^2*N^2*O*P^3*U^3*V_2*V_4^3:
mtot := A^8*B^2*C^5*E^6*F^3*G^6*H^2*II^2*M^2*N^2*O*P^3*U^4*V_2*V_4^3: 

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -1);

# Case 2, with edge v2v4
Pol := (V_2-V_4)*Pol:
m := m*V_2:
mtot := V_2*V_4*mtot:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -1);

# Case 3
Pol := (A-B)*(A-C)*(A-E)*(A-F)*(A-G)*(A-H)*(A-II)*(A-P)*(A-U)*(B-C)*(B-E)*(B-F)*(B-G)*(B-H)*(B-II)*(B-U)*(C-E)*(C-F)*(C-G)*(C-H)*(C-U)*(E-F)*(E-G)*(E-H)*(E-M)*(E-U)*(F-G)*(F-H)*(F-M)*(F-N)*(F-U)*(G-H)*(G-N)*(G-O)*(G-U)*(G-V_4)*(H-O)*(H-P)*(H-U)*(II-P)*(M-N)*(N-O)*(N-V_4)*(O-P)*(O-V_4)*(U-V_4):
m := A^7*B*C^4*E^6*F^3*G^6*H^2*II^2*M^2*N^2*O*P^3*U^4*V_4^3:
mtot := A^8*B*C^4*E^6*F^3*G^6*H^2*II^2*M^2*N^2*O*P^3*U^4*V_4^3:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 3);

# Case 4, item 1
Pol := (C-D)*(C-E)*(C-F)*(C-G)*(C-H)*(C-U)*(D-E)*(D-F)*(D-G)*(D-H)*(D-L)*(D-U)*(E-F)*(E-G)*(E-H)*(E-L)*(E-M)*(E-Q)*(E-U)*(F-G)*(F-H)*(F-M)*(F-N)*(F-U)*(G-H)*(G-N)*(G-U)*(G-V_4)*(H-U)*(L-M)*(L-Q)*(M-N)*(M-Q)*(N-V_4)*(U-V_4):
m := C^4*D^2*E^8*F^3*G^5*L*M^4*N*Q*U^4*V_4^2:
mtot := C^4*D^2*E^8*F^3*G^5*H*L^2*M^4*N*Q*U^4*V_4^2:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -1);

# Case 4, item 2
Pol := (C-D)*(C-E)*(C-F)*(C-G)*(C-U)*(D-E)*(D-F)*(D-G)*(D-L)*(D-U)*(E-F)*(E-G)*(E-L)*(E-M)*(E-Q)*(E-U)*(F-G)*(F-M)*(F-N)*(F-U)*(G-N)*(G-O)*(G-U)*(G-V_4)*(L-M)*(L-Q)*(M-N)*(M-Q)*(N-O)*(N-V_4)*(O-V_4)*(U-V_4):
m := C^3*D*E^7*F^2*G^4*L*M^4*N^2*O*Q*U^3*V_4^3:
mtot := C^3*D*E^7*F^2*G^5*L^2*M^4*N^2*O*Q*U^3*V_4^3:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 1);

## Lemma 57
# Case \hat{h}\cap \hat{n}\neq \varnothing
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-F)*(A-G)*(A-II)*(A-P)*(A-U)*(B-C)*(B-D)*(B-E)*(B-F)*(B-G)*(B-II)*(B-J)*(B-U)*(C-D)*(C-E)*(C-F)*(C-G)*(C-J)*(C-K)*(C-U)*(C-V_2)*(D-E)*(D-F)*(D-G)*(D-K)*(D-L)*(D-U)*(E-F)*(E-G)*(E-L)*(E-M)*(E-U)*(F-G)*(F-M)*(F-U)*(G-U)*(G-V_4)*(II-J)*(II-P)*(J-K)*(J-V_2)*(K-L)*(K-V_2)*(L-M)*(U-V_2)*(U-V_4):
m := A^8*B^2*C^7*D^2*E^7*F^2*G^5*II^3*J^2*K^2*L^2*U^4*V_2^3*V_4:
mtot := A^8*B^2*C^7*D^2*E^7*F^2*G^5*II^3*J^2*K^2*L^2*M*P*U^4*V_2^3*V_4:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -3);

# Case \hat{h}\cap\hat{v_4}\neq\varnothing
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-F)*(A-G)*(A-II)*(A-P)*(A-U)*(B-C)*(B-D)*(B-E)*(B-F)*(B-G)*(B-II)*(B-J)*(B-U)*(C-D)*(C-E)*(C-F)*(C-G)*(C-J)*(C-K)*(C-U)*(C-V_2)*(D-E)*(D-F)*(D-G)*(D-K)*(D-L)*(D-U)*(E-F)*(E-G)*(E-L)*(E-M)*(E-U)*(F-G)*(F-M)*(F-U)*(G-U)*(II-J)*(II-P)*(J-K)*(J-V_2)*(K-L)*(K-V_2)*(L-M)*(U-V_2):
m := A^8*B^2*C^7*D^2*E^7*F*G^4*II^3*J^2*K^2*L^2*M*U^4*V_2^3:
mtot := A^8*B^2*C^7*D^2*E^7*F*G^4*II^3*J^2*K^2*L^2*M*P*U^4*V_2^3:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -8);

# Case \hat{f}\cap \hat{o}\neq \varnothing
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-G)*(A-H)*(A-II)*(A-P)*(A-U)*(B-C)*(B-D)*(B-E)*(B-G)*(B-H)*(B-II)*(B-J)*(B-U)*(C-D)*(C-E)*(C-G)*(C-H)*(C-J)*(C-K)*(C-U)*(C-V_2)*(D-E)*(D-G)*(D-H)*(D-K)*(D-L)*(D-U)*(E-G)*(E-H)*(E-L)*(E-U)*(G-H)*(G-U)*(G-V_4)*(H-P)*(H-U)*(II-J)*(II-P)*(J-K)*(J-V_2)*(K-L)*(K-V_2)*(U-V_2)*(U-V_4):
m := A^8*B^2*C^7*D^2*E^6*G^5*H^2*II^3*J^2*K^2*L*U^4*V_2^3*V_4:
mtot := A^8*B^2*C^7*D^2*E^6*G^5*H^2*II^3*J^2*K^2*L*P^2*U^4*V_2^3*V_4:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 3);

# Case \hat{f}\cap\hat{v_4}\neq\varnothing
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-G)*(A-H)*(A-II)*(A-P)*(A-U)*(B-C)*(B-D)*(B-E)*(B-G)*(B-H)*(B-II)*(B-J)*(B-U)*(C-D)*(C-E)*(C-G)*(C-H)*(C-J)*(C-K)*(C-U)*(C-V_2)*(D-E)*(D-G)*(D-H)*(D-K)*(D-L)*(D-U)*(E-G)*(E-H)*(E-L)*(E-U)*(G-H)*(G-U)*(H-P)*(H-U)*(II-J)*(II-P)*(J-K)*(J-V_2)*(K-L)*(K-V_2)*(U-V_2):
m := A^8*B^2*C^7*D^2*E^6*G^4*H*II^3*J^2*K^2*L*P*U^4*V_2^3:
mtot := A^8*B^2*C^7*D^2*E^6*G^4*H*II^3*J^2*K^2*L*P^2*U^4*V_2^3:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 4);

# Case \hat{o}\cup\hat{n}\not\subset\hat{v_4}
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-F)*(A-G)*(A-H)*(A-II)*(A-P)*(A-U)*(B-C)*(B-D)*(B-E)*(B-F)*(B-G)*(B-H)*(B-II)*(B-J)*(B-U)*(C-D)*(C-E)*(C-F)*(C-G)*(C-H)*(C-J)*(C-K)*(C-U)*(C-V_2)*(D-E)*(D-F)*(D-G)*(D-H)*(D-K)*(D-L)*(D-U)*(E-F)*(E-G)*(E-H)*(E-L)*(E-M)*(E-U)*(F-G)*(F-H)*(F-M)*(F-U)*(G-H)*(G-U)*(H-P)*(H-U)*(II-J)*(II-P)*(J-K)*(J-V_2)*(K-L)*(K-V_2)*(L-M)*(U-V_2):
m := A^9*B^3*C^8*D^3*E^8*F^2*G^5*H*II^3*J^2*K^2*L^2*M*U^5*V_2^3:
mtot := A^9*B^3*C^8*D^3*E^8*F^2*G^5*H^2*II^3*J^2*K^2*L^2*M*P^2*U^5*V_2^3:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 8);

# Case \hat{n}\neq\hat{o}
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-G)*(A-H)*(A-II)*(A-P)*(A-U)*(B-C)*(B-D)*(B-E)*(B-G)*(B-H)*(B-II)*(B-J)*(B-U)*(C-D)*(C-E)*(C-G)*(C-H)*(C-J)*(C-K)*(C-Q)*(C-U)*(D-E)*(D-G)*(D-H)*(D-K)*(D-L)*(D-U)*(E-G)*(E-H)*(E-L)*(E-U)*(G-H)*(G-O)*(G-U)*(G-V_4)*(H-O)*(H-P)*(H-U)*(II-J)*(II-P)*(J-K)*(J-Q)*(K-L)*(K-Q)*(O-P)*(O-V_4)*(U-V_4):
m := A^8*B^2*C^7*D^2*E^6*G^5*H^2*II^3*J^2*K^2*L*O*P^2*Q^2*U^4*V_4^2:
mtot := A^8*B^2*C^7*D^2*E^6*G^5*H^2*II^3*J^2*K^2*L*O*P^3*Q^2*U^4*V_4^2:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(coeff(Pol,V_4^2),U^4),Q^2),P^2),O),L),K^2),J^2),II^3),H^2),G^5),E^6),D^2),C^7),B^2),A^8) = 1);


######################
# Configuration C_17 #
######################
## Lemma 60
Pol := (C-D)*(C-E)*(C-G)*(C-J)*(C-K)*(C-U)*(C-V_2)*(D-E)*(D-G)*(D-K)*(D-L)*(D-U)*(E-G)*(E-L)*(E-U)*(E-V_3)*(G-U)*(J-K)*(J-V_2)*(K-L)*(K-V_2)*(L-V_3)*(U-V_2)*(U-V_3):
m := C^4*D^2*E^3*J*K^4*L^3*U*V_2^4*V_3^2:
mtot := C^4*D^3*E^3*G^2*J*K^4*L^3*U^2*V_2^4*V_3^2:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 1);


## Lemma 61
# Case \hat{f}\cap \hat{\ell}\neq \varnothing
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-G)*(A-H)*(A-II)*(A-P)*(A-U)*(B-C)*(B-D)*(B-E)*(B-G)*(B-H)*(B-II)*(B-J)*(B-U)*(C-D)*(C-E)*(C-G)*(C-H)*(C-J)*(C-K)*(C-U)*(C-V_2)*(D-E)*(D-G)*(D-H)*(D-K)*(D-U)*(E-G)*(E-H)*(E-U)*(E-V_3)*(G-H)*(G-O)*(G-U)*(H-O)*(H-P)*(H-U)*(II-J)*(II-P)*(J-K)*(J-V_2)*(K-V_2)*(O-P)*(U-V_2)*(U-V_3):
m := A^8*B^2*C^7*D^2*E^5*G^6*H^2*II^3*J^2*K*P^2*U^4*V_2^3*V_3:
mtot := A^8*B^2*C^7*D^2*E^5*G^6*H^2*II^3*J^2*K*O*P^3*U^4*V_2^3*V_3:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 1);

# Case \hat{d}\cap \hat{m}\neq \varnothing
Pol := (A-B)*(A-C)*(A-E)*(A-F)*(A-G)*(A-H)*(A-II)*(A-P)*(A-U)*(B-C)*(B-E)*(B-F)*(B-G)*(B-H)*(B-II)*(B-J)*(B-U)*(C-E)*(C-F)*(C-G)*(C-H)*(C-J)*(C-U)*(C-V_2)*(E-F)*(E-G)*(E-H)*(E-U)*(E-V_3)*(F-G)*(F-H)*(F-N)*(F-U)*(G-H)*(G-N)*(G-O)*(G-U)*(H-O)*(H-P)*(H-U)*(II-J)*(II-P)*(J-V_2)*(N-O)*(O-P)*(U-V_2)*(U-V_3):
m := A^8*B^2*C^6*E^5*F^2*G^7*H^2*II^3*J*N*O*P^2*U^4*V_2^2*V_3:
mtot := A^8*B^2*C^6*E^5*F^2*G^7*H^2*II^3*J*N*O^2*P^3*U^4*V_2^2*V_3: 

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -2);

# Case \hat{f}\cap \hat{v_3}\neq \varnothing
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-G)*(A-H)*(A-II)*(A-P)*(A-U)*(B-C)*(B-D)*(B-E)*(B-G)*(B-H)*(B-II)*(B-J)*(B-U)*(C-D)*(C-E)*(C-G)*(C-H)*(C-J)*(C-K)*(C-U)*(C-V_2)*(D-E)*(D-G)*(D-H)*(D-K)*(D-U)*(E-G)*(E-H)*(E-U)*(G-H)*(G-O)*(G-U)*(H-O)*(H-P)*(H-U)*(II-J)*(II-P)*(J-K)*(J-V_2)*(K-V_2)*(O-P)*(U-V_2):
m := A^8*B^2*C^7*D*E^4*G^6*H^2*II^3*J^2*K*O*P^2*U^4*V_2^3:
mtot := A^8*B^2*C^7*D*E^4*G^6*H^2*II^3*J^2*K*O*P^3*U^4*V_2^3:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -1);

# Case \hat{d}\cap \hat{v_3}\neq \varnothing
Pol := (A-B)*(A-C)*(A-E)*(A-F)*(A-G)*(A-H)*(A-II)*(A-P)*(A-U)*(B-C)*(B-E)*(B-F)*(B-G)*(B-H)*(B-II)*(B-J)*(B-U)*(C-E)*(C-F)*(C-G)*(C-H)*(C-J)*(C-U)*(C-V_2)*(E-F)*(E-G)*(E-H)*(E-U)*(F-G)*(F-H)*(F-N)*(F-U)*(G-H)*(G-N)*(G-O)*(G-U)*(H-O)*(H-P)*(H-U)*(II-J)*(II-P)*(J-V_2)*(N-O)*(O-P)*(U-V_2):
m := A^8*B^2*C^6*E^4*F*G^7*H^2*II^3*J*N*O^2*P^2*U^4*V_2^2:
mtot := A^8*B^2*C^6*E^4*F*G^7*H^2*II^3*J*N*O^2*P^3*U^4*V_2^2:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 2);

# Case \hat{m}\neq\hat{\ell}
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-G)*(A-H)*(A-II)*(A-P)*(A-U)*(B-C)*(B-D)*(B-E)*(B-G)*(B-H)*(B-II)*(B-J)*(B-U)*(C-D)*(C-E)*(C-G)*(C-H)*(C-J)*(C-K)*(C-Q)*(C-U)*(D-E)*(D-G)*(D-H)*(D-K)*(D-L)*(D-U)*(E-G)*(E-H)*(E-L)*(E-U)*(E-V_3)*(G-H)*(G-O)*(G-U)*(H-O)*(H-P)*(H-U)*(II-J)*(II-P)*(J-K)*(J-Q)*(K-L)*(K-Q)*(L-V_3)*(O-P)*(U-V_3):
m := A^8*B^2*C^7*D^2*E^5*G^6*H^2*II^3*J^2*K^2*L*O*P^2*Q^2*U^4*V_3^2:
mtot := A^8*B^2*C^7*D^2*E^5*G^6*H^2*II^3*J^2*K^2*L*O*P^3*Q^2*U^4*V_3^2:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -1);

# Case \hat{m}\not\subset\hat{v_3}
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-G)*(A-H)*(A-II)*(A-P)*(A-U)*(B-C)*(B-D)*(B-E)*(B-G)*(B-H)*(B-II)*(B-J)*(B-U)*(C-D)*(C-E)*(C-G)*(C-H)*(C-J)*(C-K)*(C-U)*(D-E)*(D-G)*(D-H)*(D-K)*(D-U)*(E-G)*(E-H)*(E-U)*(G-H)*(G-O)*(G-U)*(H-O)*(H-P)*(H-U)*(II-J)*(II-P)*(J-K)*(O-P):
m := A^8*B^2*C^7*D^2*E^4*G^6*H^2*II^3*J^2*K*P^2*U^3:
mtot := A^8*B^2*C^7*D^2*E^4*G^6*H^2*II^3*J^2*K*O*P^3*U^3:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 1);


## Lemma 62
# Case \hat{b}\cap \hat{k}\neq \varnothing
Pol := (A-C)*(A-D)*(A-E)*(A-F)*(A-G)*(A-H)*(A-II)*(A-P)*(A-U)*(C-D)*(C-E)*(C-F)*(C-G)*(C-H)*(C-U)*(C-V_2)*(D-E)*(D-F)*(D-G)*(D-H)*(D-L)*(D-U)*(E-F)*(E-G)*(E-H)*(E-L)*(E-M)*(E-U)*(F-G)*(F-H)*(F-M)*(F-N)*(F-U)*(G-H)*(G-N)*(G-O)*(G-U)*(H-O)*(H-P)*(H-U)*(II-P)*(L-M)*(M-N)*(N-O)*(O-P)*(U-V_2):
m := A^8*C^5*D*E^7*F^2*G^7*H^2*L*M^2*N^2*O^2*P^3*U^3*V_2:
mtot := A^8*C^5*D*E^7*F^2*G^7*H^2*II*L*M^2*N^2*O^2*P^3*U^3*V_2:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -8);

# Case \hat{d}\cap \hat{j}\neq \varnothing
Pol := (A-B)*(A-C)*(A-E)*(A-F)*(A-G)*(A-H)*(A-II)*(A-P)*(A-U)*(B-C)*(B-E)*(B-F)*(B-G)*(B-H)*(B-II)*(B-U)*(C-E)*(C-F)*(C-G)*(C-H)*(C-U)*(C-V_2)*(E-F)*(E-G)*(E-H)*(E-M)*(E-U)*(F-H)*(F-G)*(F-M)*(F-N)*(F-U)*(G-H)*(G-N)*(G-O)*(G-U)*(H-O)*(H-P)*(H-U)*(II-P)*(M-N)*(N-O)*(O-P)*(U-V_2):
m := A^8*B^2*C^5*E^6*F^2*G^7*H^2*M*N^2*O^2*P^3*U^3*V_2:
mtot := A^8*B^2*C^5*E^6*F^2*G^7*H^2*II^2*M*N^2*O^2*P^3*U^3*V_2: 

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 4);

# Case \hat{d}\cap \hat{v_2}\neq \varnothing
Pol := (A-B)*(A-C)*(A-E)*(A-F)*(A-G)*(A-H)*(A-II)*(A-P)*(A-U)*(B-C)*(B-E)*(B-F)*(B-G)*(B-H)*(B-II)*(B-U)*(C-E)*(C-F)*(C-G)*(C-H)*(C-U)*(E-F)*(E-G)*(E-H)*(E-M)*(E-U)*(F-G)*(F-H)*(F-M)*(F-N)*(F-U)*(G-H)*(G-N)*(G-O)*(G-U)*(H-O)*(H-P)*(H-U)*(II-P)*(M-N)*(N-O)*(O-P):
m := A^8*B*C^4*E^6*F^2*G^7*H^2*II*M*N^2*O^2*P^3*U^3:
mtot := A^8*B*C^4*E^6*F^2*G^7*H^2*II^2*M*N^2*O^2*P^3*U^3:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 4);

# Case \hat{b}\cap \hat{v_2}\neq \varnothing
Pol := (A-C)*(A-D)*(A-E)*(A-F)*(A-G)*(A-H)*(A-II)*(A-P)*(A-U)*(C-D)*(C-E)*(C-F)*(C-G)*(C-H)*(C-U)*(D-E)*(D-F)*(D-G)*(D-H)*(D-L)*(D-U)*(E-F)*(E-G)*(E-H)*(E-L)*(E-M)*(E-U)*(F-G)*(F-H)*(F-M)*(F-N)*(F-U)*(G-H)*(G-N)*(G-O)*(G-U)*(H-O)*(H-P)*(H-U)*(II-P)*(L-M)*(M-N)*(N-O)*(O-P):
m := A^8*C^4*D*E^7*F^2*G^7*H^2*L*M^2*N^2*O^2*P^3*U^3:
mtot := A^8*C^4*D*E^7*F^2*G^7*H^2*II*L*M^2*N^2*O^2*P^3*U^3:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 8);

# Case $\hat{k}\not\subset\hat{v_2}$ or $\hat{j}\not\subset\hat{v_2}$
Pol := (A-B)*(A-C)*(A-D)*(A-E)*(A-F)*(A-G)*(A-H)*(A-II)*(A-P)*(A-U)*(B-C)*(B-D)*(B-E)*(B-F)*(B-G)*(B-H)*(B-II)*(B-U)*(C-D)*(C-E)*(C-F)*(C-G)*(C-H)*(C-U)*(D-E)*(D-F)*(D-G)*(D-H)*(D-L)*(D-U)*(E-F)*(E-G)*(E-H)*(E-L)*(E-M)*(E-U)*(F-G)*(F-H)*(F-M)*(F-N)*(F-U)*(G-H)*(G-N)*(G-O)*(G-U)*(H-O)*(H-P)*(H-U)*(II-P)*(L-M)*(M-N)*(N-O)*(O-P):
m := A^9*B*C^5*D^2*E^8*F^3*G^8*H^3*L*M^2*N^2*O^2*P^3*U^4:
mtot := A^9*B^2*C^5*D^2*E^8*F^3*G^8*H^3*II^2*L*M^2*N^2*O^2*P^3*U^4:


evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = -8);

# Case $\hat{j}\neq\hat{k}$
Pol := (A-C)*(A-D)*(A-E)*(A-F)*(A-G)*(A-H)*(A-P)*(A-U)*(C-D)*(C-E)*(C-F)*(C-G)*(C-H)*(C-K)*(C-U)*(C-V_2)*(D-E)*(D-F)*(D-G)*(D-H)*(D-K)*(D-L)*(D-U)*(E-F)*(E-G)*(E-H)*(E-L)*(E-M)*(E-Q)*(E-U)*(F-G)*(F-H)*(F-M)*(F-N)*(F-U)*(G-H)*(G-N)*(G-O)*(G-U)*(H-O)*(H-P)*(H-U)*(K-L)*(K-V_2)*(L-M)*(L-Q)*(M-N)*(M-Q)*(N-O)*(O-P)*(U-V_2):
m := A^7*C^5*D^2*E^7*F^2*G^7*H^2*K*L^2*M^2*N^2*O^2*P^2*Q^2*U^4*V_2^2:
mtot := A^7*C^5*D^2*E^7*F^2*G^7*H^2*K*L^2*M^2*N^2*O^2*P^2*Q^2*U^4*V_2^2:

evalb(degree(Pol) = degree(m));
divide(mtot, m);
evalb(cof(Pol, m) = 6);
